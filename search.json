{
  "articles": [
    {
      "path": "index.html",
      "title": "Data Toolbox for Reproducible Research in Ecology",
      "description": "FRB-CESAB & GdR EcoStat Workshop",
      "author": [
        {
          "name": "Nicolas Casajus",
          "url": "https://nicolascasajus.fr"
        },
        {
          "name": "Stéphane Dray",
          "url": "https://lbbe.univ-lyon1.fr/fr/annuaires-des-membres/dray-stephane"
        },
        {
          "name": "Olivier Gimenez",
          "url": "https://oliviergimenez.github.io"
        },
        {
          "name": "Loreleï Guéry",
          "url": "https://orcid.org/0000-0003-3004-8462"
        },
        {
          "name": "François Guilhaumon",
          "url": "https://fguilhaumon.gitlab.io/"
        },
        {
          "name": "Nina Schiettekatte",
          "url": "http://www.criobe.pf/pro/personnel/doctorants/nina-schiettekatte/"
        }
      ],
      "date": "`r format(Sys.Date(), '%m-%d-%Y')`",
      "contents": "\n\n\nThe objective of this five-day workshop, co-organized by the FRB-CESAB and the GdR EcoStat, is to train young researchers in reproducibility, software development and version management tools (e.g. R, git, Rmarkdown, tidyverse, docker), applied to biodiversity research.\n\nProgram\nDay 1\n       Icebreaker and introduction of the week        Open science and Reproducible research        Research compendium        Version control (git) and collaboration (GitHub)\nDay 2\n       Data handling (dplyr)        Data visualization (ggplot2)        Literate programming (rmarkdown)\nDay 3\n       Optimization and pipeline toolkit (targets)        Dealing with R package versions (renv)        Containerization (Docker)        Building R packages\nDay 4\n       Subgroups projects\nDay 5\n       Subgroups projects\n\nPré-requis\nThe following software must be installed before the workshop: R (latest version), RStudio et git. Follow this tutorial to install your working environment.\nYou also need to create an account (free) on GitHub.\nCorrections\nIf you see mistakes or want to suggest changes, please Create an issue on the source repository.\nReuse\nThe material of this website is licensed under Creative Commons Attribution CC BY 4.0. Source code is available at https://github.com/rdatatoolbox/rdatatoolbox.github.io/.\nCitation\nCasajus N, Dray S, Gimenez O, Guéry L, Guilhaumon F & Schiettekatte NMD (2021) Workshop FRB-CESAB & GdR EcoStat: Data Toolbox for Reproducible Research in Ecology (Edition 2021). Zenodo. http://doi.org/10.5281/zenodo.4262978.\n\n\n\n",
      "last_modified": "2021-12-10T11:27:15+01:00"
    },
    {
      "path": "instructions.html",
      "title": "Installation de R, RStudio et git",
      "author": [],
      "contents": "\n\nContents\nInstallation\n  Windows\n  macOS\n Ubuntu\n\nConfiguration\ngit\n GitHub SSH keys\n GitHub PAT\n\nCorrections\nReuse\nCitation\n\nN.B. Les numéros de versions sont donnés à titre indicatif. Il est cependant important d’installer une version de  supérieure ou égale à 4.0. Si vous avez une ancienne version de , il est recommendé de la désinstaller (vous devrez réinstaller vos packages favoris).\n\nInstallation\n  Windows\nTéléchargez  à cette adresse :https://cran.r-project.org/\n         Cliquez sur Download R for Windows          Cliquez sur base          Cliquez sur Download R 4.1.1 for Windows          Lancez l’exécutable R-4.1.1-win.exe et suivez les instructions\n\nTéléchargez RStudio Desktop à cette adresse :https://www.rstudio.com/products/rstudio/download/#download\n         Téléchargez la version pour Windows 10 (le .exe et non pas le .zip)          Lancez l’exécutable RStudio-2021.09.0-351.exe et suivez les instructions          Vérifiez que RStudio est bien connecté à . Ouvrez RStudio et tapez :\n\n\nR.version.string\n## [1] \"R version 4.1.1 (2021-08-10)\"\n\n\n\n\nTéléchargez git à cette adresse :https://git-scm.com/downloads\n         Téléchargez la version 64-bit pour Windows          Lancez l’exécutable Git-2.33.1-64-bit.exe et suivez les instructions          Vérifiez que RStudio trouve bien git. Ouvrez RStudio et tapez :\n\n\nSys.which(\"git\")\n## C:/Program Files/Git/bin/git.exe\n\n\n\nOu dans la barre des menus de RStudio, cliquez sur Tools et Global options et affichez les paramètres de Git/SVN. Le chemin d’accès à git doit correspondre à : C:/Program Files/Git/bin/git.exe\n\nTélécharger Rtools4 à cette adresse :https://cran.r-project.org/bin/windows/Rtools/\n         Téléchargez la version 64-bit pour Windows          Lancez l’exécutable rtools40v2-x86_64.exe et suivez les instructions\nL’installation de Rtools4 est optionnelle, mais ce logiciel est requis pour installer des packages (depuis les sources) qui contiennent du code C/C++/Fortran nécessitant d’être compilé. Rtools4 inclut en particulier l’utilitaire make.\n         Une fois installé, il faut dire à  où trouver les utilitaires Rtools4. Ouvrez RStudio et tapez cette ligne de code :\n\n\ncat(\"PATH='${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}'\\r\\n\", file = \"~/.Renviron\", append = TRUE)\n\n\n\nUn fichier caché .Renviron a été créé (ou amendé) dans votre dossier personnel et contient la ligne PATH='${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}' (le chemin d’accès aux utilitaires Rtools4). A chaque ouverture,  lira le contenu de ce fichier.\nRedémarrez RStudio et vérifiez que  trouve bien l’utilitaire make :\n\n\nSys.which(\"make\")\n## \"C:/rtools40/usr/bin/make.exe\"\n\n\n\nNormalement, vous devriez pouvoir installer des packages  depuis les sources :\n\n\ninstall.packages(\"jsonlite\", type = \"source\")\n\n\n\n\nInstallez pandoc\nLe package rmarkdown nécessite le logiciel pandoc qui permet de passer d’un format de fichier (ex. .Rmd) à un autre (ex. .html).\nNormalement, l’installation de RStudio Desktop installe également ce logiciel. Vérifiez en ouvrant RStudio et tapez :\n\n\nSys.which(\"pandoc\")\n## \"C:/Program Files/RStudio/bin/pandoc\"\n\n\n\nSi cette fonction ne retourne rien, vous devez installer manuellement pandoc en le téléchargeant à cette adresse : https://github.com/jgm/pandoc/releases/tag/2.16.1\nAprès avoir installé pandoc, redémarrez RStudio et vérifiez que RStudio trouve bien pandoc :\n\n\nSys.which(\"pandoc\")\n## C:/Program Files/Pandoc/bin/pandoc\n\n\n\n\nInstallez une version minimale de LaTeX\nSi vous souhaitez convertir des documents .Rmd en .pdf, vous aurez besoin de LaTeX. Pour cela, vous allez installer le package  tinytex, qui installe une version légère de LaTeX. Ouvrez RStudio et tapez les deux commandes suivantes :\n\n\n## Install tinytex ----\ninstall.packages(\"tinytex\")\n\n## Install LaTeX ----\ntinytex::install_tinytex()\n\n\n\n\n  macOS\nLa manière la plus simple d’installer l’environnement de travail est d’utiliser le gestionnaire de paquets Homebrew. Celui-ci permet d’installer (et de mettre à jour) des logiciels en ligne de commande. Pour fonctionner, vous devez avoir installé le logiciel Command Line Tools for Xcode d’Apple.\nDans un terminal, tapez cette ligne de code et acceptez la licence :\n## Install Xcode Command Line Tools ----\nsudo xcode-select --install\nVous pouvez ensuite installer Homebrew :\n## Install Homebrew ----\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\n## Check installation ----\nbrew --version\n## Homebrew 3.2.16\n\n## Update repositories ----\nbrew update\nEn quelques lignes de code, vous pouvez maintenant installer l’environnement de travail :\n## Install utilities for R ----\nbrew install --cask xquartz     ## Graphical window system\nbrew install gfortran           ## Fortran compiler for GCC\n\n## Install R ----\nbrew install --cask r\n\n## Install RStudio Desktop ----\nbrew install --cask rstudio\n\n## Install git ----\nbrew install git\n\n## Install pandoc ----\nbrew install pandoc             ## Convert documents (Rmd, html, etc.)\nVous pouvez maitenant lancer RStudio et vérifier votre installation :\n\n\nR.version.string\n## \"R version 4.1.1 (2021-08-10)\"\n\nSys.which(\"git\")\n##            git\n## \"/usr/bin/git\"\n\nSys.which(\"make\")\n##            make \n## \"/usr/bin/make\"\n\nSys.which(\"pandoc\")\n##            pandoc \n## \"/usr/local/bin/pandoc\"\n\n\n\n\nSi vous souhaitez convertir des documents .Rmd en .pdf, vous aurez besoin de LaTeX. Pour cela, vous allez installer le package  tinytex, qui installe une version légère de LaTeX. Ouvrez RStudio et tapez les deux commandes suivantes :\n\n\n## Install tinytex ----\ninstall.packages(\"tinytex\")\n\n## Install LaTeX ----\ntinytex::install_tinytex()\n\n\n\n\n   Votre environnement de travail est opérationnel. Les lignes suivantes permettent d’installer des utilitaires requis pour certains packages (sf, sp, rgdal, rgeos, raster, terra, xml, etc.).\n## Install other utilities for R (spatial and others) ----\nbrew install libgit2 \nbrew install libxml2 \nbrew install poppler \nbrew install geos gdal netcdf proj udunits\nN’oubliez pas de mettre régulièrement à jour votre environnement de travail :\n## Update environment ----\nbrew update && brew upgrade --greedy\n\n Ubuntu\nOuvrez un terminal et mettez à jour votre système :\n## System update ----\nsudo apt update && sudo apt upgrade\n\nAvant d’aller plus loin, identifiez votre version d’Ubuntu :\n## Check Ubuntu version ----\ncat /etc/issue\n## Ubuntu 20.04 LTS\n\nTableau 1. Liste des dépôts CRAN pour différentes versions d’Ubuntu\nRelease\nRelease name\nRepository URL\n21.04\nHirsute Hippo\nhttps://cloud.r-project.org/bin/linux/ubuntu hirsute-cran40/\n20.10\nGroovy Gorilla\nhttps://cloud.r-project.org/bin/linux/ubuntu groovy-cran40/\n20.04 LTS\nFocal Fossa\nhttps://cloud.r-project.org/bin/linux/ubuntu focal-cran40/\n18.04 LTS\nBionic Beaver\nhttps://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/\n16.04 LTS\nXenial Xerus\nhttps://cloud.r-project.org/bin/linux/ubuntu xenial-cran40/\n\nInstallez  en suivant ces étapes (adaptez l’URL du dépôt en fonction de votre version d’Ubuntu, cf. Tableau 1) :\n## Install APT utilities ----\nsudo apt install software-properties-common\n\n## Add CRAN GPG key ----\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\n\n## Add CRAN repository to APT repositories list ----\nsudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'\n\n## Update packages list ----\nsudo apt update\n\n## Install R ----\nsudo apt install r-base\n\n## Install R (for development, recommended) ----\nsudo apt install build-essential\nsudo apt install r-base-dev\n\nPour installer RStudio Desktop visitez cette page : https://www.rstudio.com/products/rstudio/download/#download, téléchargez le fichier .deb pour Ubuntu 18/Debian 10 et installez-le. Si vous avez la version 16.04 d’Ubuntu, visitez cette page : https://www.rstudio.com/products/rstudio/older-versions/\nOu dans un terminal :\n## Install wget utility ----\nsudo apt install wget\n\n## Download RStudio Desktop installer (Ubuntu 18.04 and olders) ----\nwget https://download1.rstudio.org/desktop/bionic/amd64/rstudio-2021.09.0-351-amd64.deb\n\n## Download RStudio Desktop installer (Ubuntu 16.04 only) ----\n# wget https://download1.rstudio.org/desktop/xenial/amd64/rstudio-1.4.1106-amd64.deb\n\n## Install RStudio Desktop ----\nsudo dpkg -i rstudio-2021.09.0-351-amd64.deb\n# sudo dpkg -i rstudio-1.4.1106-amd64.deb\n\n## Remove installer ----\nrm rstudio-2021.09.0-351-amd64.deb\n# rm rstudio-1.4.1106-amd64.deb\n\nMaintenant, installez git comme suit :\nsudo apt install git\nFinalement, vous aurez besoin de pandoc pour convertir des documents texte :\nsudo apt install pandoc\n\nVous pouvez maitenant lancer RStudio et vérifier votre installation :\n\n\nR.version.string\n## \"R version 4.1.1 (2021-08-10)\"\n\nSys.which(\"git\")\n##            git\n## \"/usr/bin/git\"\n\nSys.which(\"make\")\n##            make \n## \"/usr/bin/make\"\n\nSys.which(\"pandoc\")\n##            pandoc \n## \"/usr/bin/pandoc\"\n\n\n\n\nSi vous souhaitez convertir des documents .Rmd en .pdf, vous aurez besoin de LaTeX. Pour cela, vous allez installer le package  tinytex, qui installe une version légère de LaTeX. Ouvrez RStudio et tapez les deux commandes suivantes :\n\n\n## Install tinytex ----\ninstall.packages(\"tinytex\")\n\n## Install LaTeX ----\ntinytex::install_tinytex()\n\n\n\n\n   Votre environnement de travail est opérationnel. Les lignes suivantes permettent d’installer des utilitaires requis pour certains packages (sf, sp, rgdal, rgeos, raster, terra, etc.).\n## Install other utilities for R (spatial and others) ----\nsudo apt install libgdal-dev libproj-dev libgeos-dev libudunits2-dev libnetcdf-dev\nsudo apt install libcairo2-dev libmagick++-dev\nsudo apt install libpoppler-cpp-dev\nN’oubliez pas de mettre régulièrement à jour votre environnement de travail :\n## Update system ----\nsudo apt update && sudo apt upgrade\n\nConfiguration\ngit\nAfin de pouvoir utiliser git, vous devez renseigner votre nom et votre email qui seront utilisés pour vos commits. Dans un terminal, tapez les deux lignes suivantes :\ngit config --global user.name  \"Jane Doe\"\ngit config --global user.email \"jane.doe@mail.com\"\nOu sous  :\n\n\n## Install gert package ----\ninstall.packages(\"gert\")\n\n## Store your Git credentials (globally) ----\ngert::git_config_global_set(\"user.name\",  \"Jane Doe\")\ngert::git_config_global_set(\"user.email\", \"jane.doe@mail.com\")\n\n## Check ----\ngert::git_config_global()\n##  A tibble: 2 × 3\n##   name         value                     level \n## * <chr>        <chr>                     <chr> \n## 1 user.name    Jane Doe                  global\n## 2 user.email   jane.doe@mail.com         global\n\n\n\nUn fichier .gitconfig a été créé dans votre dossier personnel.\n\n GitHub SSH keys\nPour communiquer avec GitHub, vous pouvez utiliser le protocole HTTPS ou le protocole SSH (recommendé). Pour ce dernier, vous devez générer une paire de clés SSH qui consiste en une clé privée (localisée sur votre ordinateur) et une clé publique qui sera hébergée sur votre espace GitHub.\nProcédez comme suit :\n     Créez-vous un compte GitHub à cette adresse https://github.com/signup      Dans RStudio, cliquez sur : Tools > Global options > Git/SVN      Cliquez sur Create RSA Key et cliquez sur Create (vous pouvez omettre la phrase secrète)      Redémarrer RStudio et cliquez sur : Tools > Global options > Git/SVN      Cliquez sur View public key et copiez la clé publique      Visitez la page https://github.com/settings/keys et cliquez sur New SSH key      Donnez un titre à votre nouvelle clé et collez le contenu de votre clé publique. Puis, cliquez sur Add SSH key\nVotre nouvelle paire de clés SSH est maintenant déployée et la communication avec GitHub au travers du protocole SSH est effective. Vous n’aurez plus besoin de renseigner de mot de passe pour puller/pusher. Lorsque vous clonerez un dépôt GitHub ou ajouterez une remote à un dépôt local, assurez-vous d’utiliser l’URL SSH et non pas HTTPS.\n## URL HTTPS ----\nhttps://github.com/frbcesab/datatoolbox.git\n\n## URL SSH (à utiliser) ----\ngit@github.com:frbcesab/datatoolbox.git\nAttention : si vous perdez votre clé privée, vous devrez générer une nouvelle paire de clés SSH et stocker votre nouvelle clé publique sur GitHub.\n\n GitHub PAT\nFinalement, si vous voulez contrôler GitHub à partir de  (création de dépôts, de branches distantes, etc.), notamment avec le package usethis (qui repose en partie sur l’API GitHub), vous aurez besoin de créer un GitHub Personal Access Token (PAT).\nRendez-vous sur ce site https://github.com/settings/tokens\n     Cliquez sur Generate new token      Donnez un nom à votre nouveau token (par ex. le nom de votre ordinateur)      Dans les scopes, sélectionnez au moins repo et workflow      Copiez le token. Vous allez le stocker dans le fichier ~/.Renviron\nSous RStudio :\n\n\n## Install usethis package ----\ninstall.packages(\"usethis\")\n\n## Open ~/.Renviron file ----\nusethis::edit_r_environ()\n## • Modify '~/.Renviron'\n## • Restart R for changes to take effect\n\n\n\nAjoutez la ligne suivante : GITHUB_PAT='XXX' où XXX correspond à votre token.\nCorrections\nIf you see mistakes or want to suggest changes, please Create an issue on the source repository.\nReuse\nThe material of this website is licensed under Creative Commons Attribution CC BY 4.0. Source code is available at https://github.com/rdatatoolbox/rdatatoolbox.github.io/.\nCitation\nCasajus N, Dray S, Gimenez O, Guéry L, Guilhaumon F & Schiettekatte NMD (2021) Workshop FRB-CESAB & GdR EcoStat: Data Toolbox for Reproducible Research in Ecology (Edition 2021). Zenodo. http://doi.org/10.5281/zenodo.4262978.\n\n\n\n",
      "last_modified": "2021-12-10T11:27:17+01:00"
    }
  ],
  "collections": []
}
